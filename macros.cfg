######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT. See docs/Slicers.md for more information on using these macros.

[gcode_macro start_print]
	gcode:
		G90                                # Absolute positioning
        G28                                # Home all Axis
        BED_MESH_PROFILE load=default
        G92 E0 							   # Reset Extruder
		G1 Z2.0 F3000 					   # Move Z Axis to travel height
		G1 X373.1 Y70 Z0.28 F5000.0 	   # Move to start position
		G1 X373.1 Y250.0 Z0.28 F1500.0 E15 # Draw the first line
		G1 X373.4 Y250.0 Z0.28 F5000.0 	   # Move to side a little
		G1 X373.4 Y70 Z0.28 F1500.0 E30    # Draw the second line
		G92 E0 							   # Reset Extruder
		G1 Z2.0 F3000 					   # Move Z Axis up to travel height

[gcode_macro end_print]    
    gcode:
        G91                                # Relative positioning
        G1 E-2 F2700                       # Retract a bit
        G1 E-2 Z0.2 F2400                  # Retract and raise Z
        G1 X5 Y5 F3000                     # Wipe out
        G1 Z10                             # Raise Z more
        G90                                # Absolute positioning

        G1 X{175} Y{325}                   # Present print
        M106 S0                            # Turn-off fan
        TURN_OFF_HEATERS
        TURN_OFF_MOTORS
        #UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

######################################################################
# Load and Unload Filament
######################################################################

[gcode_macro LOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E650 F1200         # Move the extruder forward 650mm at a speed of 1200mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.
 
[gcode_macro UNLOAD_FILAMENT]
gcode:
 M83                   # Put the extruder into relative mode
 G92 E0.0              # Reset the extruder so that it thinks it is at position zero
 G1 E5 F1200
 G1 E-650 F2000        # Move the extruder backward 650mm at a speed of 1200mm/minute
 G92 E0.0              # Reset the extruder again
 M82                   # Put the extruder back into absolute mode.

[gcode_macro TURN_OFF_MOTORS]
gcode: 
  M84 ; motors off

[gcode_macro FAN_ON]
gcode:
  M106 S255

[gcode_macro FAN_OFF]
gcode:
  M106 S0

[gcode_macro PID_NOZZLE_220]
gcode:
  FAN_ON
  PID_CALIBRATE HEATER=extruder TARGET=220

[gcode_macro PREPARE_PA_TEST]
gcode:
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500

[gcode_macro RUN_PA_TEST]
gcode:
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 188.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 50.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 20.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

[gcode_macro POWER_OFF_PRINTER]
gcode:
    {action_call_remote_method("set_device_power",
                                device="printer_plug",
                                state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
             POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro ACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60

[gcode_macro DEACTIVATE_POWER_OFF]
gcode:
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=0

[delayed_gcode POWER_OFF_PRINTER_CHECK_ACT]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30
  {% else %}
    UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK_ACT DURATION=60
  {% endif %}

[gcode_shell_command backup_cfg]
command: sh /home/pi/scripts/auto_commit_klipper_cfg.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg
